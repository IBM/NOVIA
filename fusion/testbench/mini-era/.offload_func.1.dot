digraph "CFG for 'offload_func.1' function" {
	label="CFG for 'offload_func.1' function";

	Node0x5616df652770 [shape=record,label="{loadBB:\l  %1 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 0\l  %i = load i32*, i32** %1\l  %2 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 1\l  %r = load i32*, i32** %2\l  %3 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 2\l  %shift = load i32*, i32** %3\l  %4 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 3\l  %symbols.addr = load i8**, i8*** %4\l  %5 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 4\l  %j = load i32*, i32** %5\l  %6 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 5\l  %sym0v = load [16 x i8]*, [16 x i8]** %6\l  %7 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 6\l  %second_symbol = load i32*, i32** %7\l  %8 = getelementptr inbounds \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*,\l... i32*, [16 x i8]* \}, \{ i32*, i32*, i32*, i8**, i32*, [16 x i8]*, i32*, [16 x\l... i8]* \}* %0, i32 0, i32 7\l  %sym1v = load [16 x i8]*, [16 x i8]** %8\l  call void @llvm.debugtrap()\l  br label %for.body62for.body23\l}"];
	Node0x5616df652770 -> Node0x5616df653ad0;
	Node0x5616df653ad0 [shape=record,label="{for.body62for.body23:                             \l  call void @llvm.debugtrap.1()\l  %9 = load i32, i32* %i, align 4\l  call void @llvm.debugtrap.2()\l  %10 = call i32 @_rev(i32 %9)\l  call void @llvm.debugtrap.3()\l  store i32 %10, i32* %r, align 4\l  call void @llvm.debugtrap.4()\l  %11 = load i32, i32* %shift, align 4\l  call void @llvm.debugtrap.5()\l  %12 = load i32, i32* %r, align 4\l  call void @llvm.debugtrap.6()\l  %13 = lshr i32 %12, %11\l  call void @llvm.debugtrap.7()\l  store i32 %13, i32* %r, align 4\l  call void @llvm.debugtrap.8()\l  %14 = load i32, i32* %i, align 4\l  call void @llvm.debugtrap.9()\l  %15 = load i32, i32* %r, align 4\l  call void @llvm.debugtrap.10()\l  %16 = icmp ult i32 %14, %15\l  call void @llvm.debugtrap.11()\l  %17 = load i8*, i8** %symbols.addr, align 8\l  call void @llvm.debugtrap.12()\l  %18 = zext i32 %15 to i64\l  call void @llvm.debugtrap.13()\l  %19 = getelementptr inbounds i8, i8* %17, i64 %18\l  call void @llvm.debugtrap.14()\l  %20 = load i8, i8* %19, align 1\l  call void @llvm.debugtrap.15()\l  %21 = load i32, i32* %j, align 4\l  call void @llvm.debugtrap.16()\l  %22 = sext i32 %21 to i64\l  call void @llvm.debugtrap.17()\l  %23 = getelementptr inbounds [16 x i8], [16 x i8]* %sym0v, i64 0, i64 %22\l  call void @llvm.debugtrap.18()\l  store i8 %20, i8* %23, align 1\l  call void @llvm.debugtrap.19()\l  %24 = load i8*, i8** %symbols.addr, align 8\l  call void @llvm.debugtrap.20()\l  %25 = load i32, i32* %second_symbol, align 4\l  call void @llvm.debugtrap.21()\l  %26 = zext i32 %25 to i64\l  call void @llvm.debugtrap.22()\l  %27 = getelementptr inbounds i8, i8* %24, i64 %26\l  call void @llvm.debugtrap.23()\l  %28 = load i8, i8* %27, align 1\l  call void @llvm.debugtrap.24()\l  %29 = load i32, i32* %j, align 4\l  call void @llvm.debugtrap.25()\l  %30 = sext i32 %29 to i64\l  call void @llvm.debugtrap.26()\l  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %sym1v, i64 0, i64 %30\l  call void @llvm.debugtrap.27()\l  store i8 %28, i8* %31, align 1\l  br label %storeBB\l}"];
	Node0x5616df653ad0 -> Node0x5616df655c90;
	Node0x5616df655c90 [shape=record,label="{storeBB:                                          \l  call void @llvm.debugtrap.28()\l  %32 = alloca \{ i1 \}\l  %33 = getelementptr inbounds \{ i1 \}, \{ i1 \}* %32, i32 0, i32 0\l  store i1 %16, i1* %33\l  ret \{ i1 \}* %32\l}"];
}
