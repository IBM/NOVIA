diff --git a/gas/config/tc-riscv.c b/gas/config/tc-riscv.c
index 3b1316842f..3322f17ccb 100644
--- a/gas/config/tc-riscv.c
+++ b/gas/config/tc-riscv.c
@@ -988,22 +988,6 @@ validate_riscv_insn (const struct riscv_opcode *opc, int length)
       case 'T':	USE_BITS (OP_MASK_RS2,		OP_SH_RS2);	break;
       case 'd':	USE_BITS (OP_MASK_RD,		OP_SH_RD);	break;
       case 'm':	USE_BITS (OP_MASK_RM,		OP_SH_RM);	break;
-      // NFU
-      case 'n': 
-	      switch (c = *p++)
-        {
-          case '1': USE_BITS (OP_MASK_NFU_N, OP_SH_NFU_N); break;
-          case '2': USE_BITS (OP_MASK_NFU_MASK1, OP_SH_NFU_MASK1); break;
-          case '3': USE_BITS (OP_MASK_NFU_MASK2, OP_SH_NFU_MASK2); break;
-          case '4': USE_BITS (OP_MASK_NFU_MASK3, OP_SH_NFU_MASK3); break;
-          case 'r': USE_BITS (OP_MASK_NFU_MASK1, OP_SH_NFU_MASK1); break;
-          default: 
-	          as_bad (_("internal: bad NFU RISC-V opcode"
-    			" (unknown operand type `F%c'): %s %s"),
-    		      c, opc->name, opc->args);
-            return FALSE;
-        }
-      break;
       case 's':	USE_BITS (OP_MASK_RS1,		OP_SH_RS1);	break;
       case 't':	USE_BITS (OP_MASK_RS2,		OP_SH_RS2);	break;
       case 'r':	USE_BITS (OP_MASK_RS3,          OP_SH_RS3);     break;
@@ -1932,36 +1916,6 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,
 	  s += strspn (s, " \t");
 	  switch (*args)
 	    {
-      // NFU
-      case 'n':
-	      switch (*++args)
-        {
-          case '1': 
-		        my_getSmallExpression (imm_expr, imm_reloc, s, p);
-            INSERT_OPERAND(NFU_N, *ip, imm_expr->X_add_number);
-            while(*++s != ',' && *s != 0);
-            continue;
-          case '2': 
-		        my_getSmallExpression (imm_expr, imm_reloc, s, p);
-            INSERT_OPERAND(NFU_MASK1, *ip,imm_expr->X_add_number);
-            while(*++s != ',' && *s != 0);
-            continue;
-          case '3': 
-		        my_getSmallExpression (imm_expr, imm_reloc, s, p);
-            INSERT_OPERAND(NFU_MASK2, *ip, imm_expr->X_add_number);
-            while(*++s != ',' && *s != 0);
-            continue;
-          case '4': 
-		        my_getSmallExpression (imm_expr, imm_reloc, s, p);
-            INSERT_OPERAND(NFU_MASK3, *ip, imm_expr->X_add_number); 
-            while(*++s != ',' && *s != 0);
-            continue;
-          case 'r':
-	          reg_lookup (&s, RCLASS_GPR, &regno);
-		        INSERT_OPERAND (NFU_MASK1, *ip, regno);
-            continue;
-        }
-        break;
 	    case '\0': 	/* End of args.  */
 	      if (insn->pinfo != INSN_MACRO)
 		{
diff --git a/gas/testsuite/gas/riscv/nfu.d b/gas/testsuite/gas/riscv/nfu.d
deleted file mode 100644
index 30dbd0bda9..0000000000
--- a/gas/testsuite/gas/riscv/nfu.d
+++ /dev/null
@@ -1,13 +0,0 @@
-#as: -march=rv64ic
-#objdump: -d
-
-.*:[ 	]+file format .*
-
-
-Disassembly of section .text:
-
-0+000 <target>:
-[ 	]+0:[ 	]+0620800b[ 	]+set_load_nfu[ 	]+0,1,2,3
-[ 	]+2:[ 	]+0000808b[ 	]+exec_nfu[ 	]+0,1
-[ 	]+4:[ 	]+0000018b[ 	]+pop_nfu[ 	]+0,a0
-
diff --git a/gas/testsuite/gas/riscv/nfu.s b/gas/testsuite/gas/riscv/nfu.s
deleted file mode 100644
index f9e64907ce..0000000000
--- a/gas/testsuite/gas/riscv/nfu.s
+++ /dev/null
@@ -1,5 +0,0 @@
-target:
-	set_load_nfu 0,	1,	2,	3
-	exec_nfu 0,	1
-	pop_nfu 0, a0, 0
-	pop_nfu 1, a0, 1
diff --git a/include/opcode/riscv-opc.h b/include/opcode/riscv-opc.h
index d6f204f123..b0e549a0f2 100644
--- a/include/opcode/riscv-opc.h
+++ b/include/opcode/riscv-opc.h
@@ -597,13 +597,6 @@
 #define MASK_CUSTOM3_RD_RS1  0x707f
 #define MATCH_CUSTOM3_RD_RS1_RS2 0x707b
 #define MASK_CUSTOM3_RD_RS1_RS2  0x707f
-/* NFU Ins */
-#define MATCH_SET_LOAD_NFU 0x5b
-#define MASK_SET_LOAD_NFU 0xc00003ff
-#define MATCH_EXEC_NFU 0xdb
-#define MASK_EXEC_NFU 0xfff003ff
-#define MATCH_POP_NFU 0x15b
-#define MASK_POP_NFU 0xfe0003ff
 /* Privileged CSR addresses (v1.11).  */
 #define CSR_USTATUS 0x0
 #define CSR_UIE 0x4
@@ -1113,11 +1106,6 @@ DECLARE_INSN(c_sd, MATCH_C_SD, MASK_C_SD)
 DECLARE_INSN(c_addiw, MATCH_C_ADDIW, MASK_C_ADDIW)
 DECLARE_INSN(c_ldsp, MATCH_C_LDSP, MASK_C_LDSP)
 DECLARE_INSN(c_sdsp, MATCH_C_SDSP, MASK_C_SDSP)
-// NFU
-DECLARE_INSN(set_load_nfu, MATCH_SET_LOAD_NFU, MASK_SET_LOAD_NFU)
-DECLARE_INSN(exec_nfu, MATCH_EXEC_NFU, MASK_EXEC_NFU)
-DECLARE_INSN(pop_nfu, MATCH_POP_NFU, MASK_POP_NFU)
-
 DECLARE_INSN(custom0, MATCH_CUSTOM0, MASK_CUSTOM0)
 DECLARE_INSN(custom0_rs1, MATCH_CUSTOM0_RS1, MASK_CUSTOM0_RS1)
 DECLARE_INSN(custom0_rs1_rs2, MATCH_CUSTOM0_RS1_RS2, MASK_CUSTOM0_RS1_RS2)
diff --git a/include/opcode/riscv.h b/include/opcode/riscv.h
index bcf652cc0b..caaaea5162 100644
--- a/include/opcode/riscv.h
+++ b/include/opcode/riscv.h
@@ -198,16 +198,6 @@ static const char * const riscv_pred_succ[16] =
 
 /* RV fields.  */
 
-//NFU
-#define OP_MASK_NFU_N 0x1f
-#define OP_SH_NFU_N 10
-#define OP_MASK_NFU_MASK1 0x1f
-#define OP_SH_NFU_MASK1 15
-#define OP_MASK_NFU_MASK2 0x1f
-#define OP_SH_NFU_MASK2 20
-#define OP_MASK_NFU_MASK3 0x1f
-#define OP_SH_NFU_MASK3 25
-
 #define OP_MASK_OP		0x7f
 #define OP_SH_OP		0
 #define OP_MASK_RS2		0x1f
@@ -322,7 +312,6 @@ enum riscv_insn_class
    INSN_CLASS_ZICSR,
    INSN_CLASS_ZIFENCEI,
    INSN_CLASS_ZIHINTPAUSE,
-   INSN_CLASS_NFU,
   };
 
 /* This structure holds information for a particular instruction.  */
diff --git a/opcodes/riscv-dis.c b/opcodes/riscv-dis.c
index 96769c7e76..c3d9bb8745 100644
--- a/opcodes/riscv-dis.c
+++ b/opcodes/riscv-dis.c
@@ -295,28 +295,6 @@ print_insn_args (const char *d, insn_t l, bfd_vma pc, disassemble_info *info)
 		     riscv_rm, ARRAY_SIZE (riscv_rm));
 	  break;
 
-  //NFU
-  case 'n':
-	  switch (*++d)
-    {
-      case '1': // #NFU
-	      print (info->stream, "nfu%d", (int)EXTRACT_OPERAND (NFU_N,l));
-      break;
-      case '2': // Mask1 or NFU Config or Dest Reg
-	      print (info->stream, "%d", (int)EXTRACT_OPERAND (NFU_MASK1,l));
-      break;
-      case '3': // Mask 2
-	      print (info->stream, "%d", (int)EXTRACT_OPERAND (NFU_MASK2,l));
-      break;
-      case '4': // Mask 3
-	      print (info->stream, "%d", (int)EXTRACT_OPERAND (NFU_MASK3,l));
-      break;
-      case 'r':
-	      print (info->stream, "%s", riscv_gpr_names[(l >> OP_SH_NFU_MASK1) & OP_MASK_NFU_MASK1]);
-      break;
-    }
-    break;
-
 	case 'P':
 	  arg_print (info, EXTRACT_OPERAND (PRED, l),
 		     riscv_pred_succ, ARRAY_SIZE (riscv_pred_succ));
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index f0e2fba232..a2ea66a723 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -275,10 +275,6 @@ const struct riscv_opcode riscv_opcodes[] =
 {"addi",        0, INSN_CLASS_C,   "Cc,Cc,CL", MATCH_C_ADDI16SP, MASK_C_ADDI16SP, match_c_addi16sp, INSN_ALIAS },
 {"addi",        0, INSN_CLASS_C,   "d,Cz,Co",  MATCH_C_LI, MASK_C_LI, match_rd_nonzero, INSN_ALIAS },
 {"addi",        0, INSN_CLASS_I,   "d,s,j",  MATCH_ADDI, MASK_ADDI, match_opcode, 0 },
-// NFU
-{"set_load_nfu", 0, INSN_CLASS_I, "n1,n2,n3,n4", MATCH_SET_LOAD_NFU, MASK_SET_LOAD_NFU, match_opcode, 0},
-{"exec_nfu", 0, INSN_CLASS_I, "n1,n2", MATCH_EXEC_NFU, MASK_EXEC_NFU, match_opcode,0 },
-{"pop_nfu", 0, INSN_CLASS_I, "n1,nr,n3", MATCH_POP_NFU, MASK_POP_NFU, match_opcode, 0},
 {"add",         0, INSN_CLASS_C,   "d,CU,CV",  MATCH_C_ADD, MASK_C_ADD, match_c_add, INSN_ALIAS },
 {"add",         0, INSN_CLASS_C,   "d,CV,CU",  MATCH_C_ADD, MASK_C_ADD, match_c_add, INSN_ALIAS },
 {"add",         0, INSN_CLASS_C,   "d,CU,Co",  MATCH_C_ADDI, MASK_C_ADDI, match_rd_nonzero, INSN_ALIAS },
